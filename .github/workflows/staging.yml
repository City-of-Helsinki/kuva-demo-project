name: Build & Staging
on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      build_required:
        description: "Build images (true/false)"
        required: true
        default: "false"

env:
  CONTAINER_REGISTRY: ghcr.io
  CONTAINER_REGISTRY_USER: ${{ secrets.GHCR_CONTAINER_REGISTRY_USER }}
  CONTAINER_REGISTRY_PASSWORD: ${{ secrets.GHCR_TOKEN }}
  CONTAINER_REGISTRY_REPO: ghcr.io/city-of-helsinki/${{ github.event.repository.name }}
  REPO_NAME: ${{ github.event.repository.name }}
  KUBECONFIG_RAW: ${{ secrets.KUBECONFIG_RAW_STAGING }}
  BUILD_ARTIFACT_FOLDER: "build_artifacts"
  SERVICE_ARTIFACT_FOLDER: "service_artifacts"
  BASE_DOMAIN: ${{ secrets.BASE_DOMAIN_STAGING }}
  K8S_REQUEST_CPU: 2m
  K8S_REQUEST_RAM: 200Mi
  K8S_LIMIT_CPU: 500m
  K8S_LIMIT_RAM: 250Mi
  K8S_REPLICACOUNT: 2

jobs:
  build:
    if: github.event_name == 'push' || github.ref == 'refs/heads/main'
    strategy:
      fail-fast: false
      matrix:
        example: ["djangoapp"]
    runs-on: ubuntu-latest
    name: Build
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Build
        if: github.event_name == 'push' || github.event.inputs.build_required == 'true'
        uses: andersinno/kolga-build-action@v2
        env:
          DOCKER_BUILD_SOURCE: ./${{ matrix.example }}/Dockerfile
          DOCKER_BUILD_CONTEXT: ./${{ matrix.example }}
          DOCKER_IMAGE_NAME: ${{ matrix.example }}

  staging:
    if: github.event_name == 'push' || github.ref == 'refs/heads/main'
    strategy:
      fail-fast: false
      matrix:
        example: ["djangoapp"]
    runs-on: ubuntu-latest
    needs: build
    name: Staging
    steps:
      - uses: actions/checkout@v2
      - uses: andersinno/kolga-setup-action@v2

      - name: Deploy
        uses: andersinno/kolga-deploy-action@v2
        with:
          track: "staging"
        env:
          DOCKER_BUILD_SOURCE: ./${{ matrix.example }}/Dockerfile
          DOCKER_BUILD_CONTEXT: ./${{ matrix.example }}
          DOCKER_IMAGE_NAME: ${{ matrix.example }}
          PROJECT_NAME: ${{ matrix.service }}
          K8S_NAMESPACE: ${{ secrets.K8S_NAMESPACE_STAGING }}
          ENVIRONMENT_URL: https://${{ secrets.ENVIRONMENT_URL_STAGING }}
          K8S_SECRET_SKIP_DATABASE_CHECK: 1 # No database
          K8S_SECRET_ALLOWED_HOSTS: "*"
          K8S_SECRET_DEBUG: 0
          K8S_SECRET_VERSION: ${{ github.sha }}
          K8S_SECRET_SECRET_KEY: ${{ secrets.DJANGOAPP_SECRET_KEY_STAGING }}
