name: Build & Review
on:
  pull_request:
  workflow_dispatch:
    inputs:
      build_required:
        description: "Build images (true/false). Note that PR environment is deployed with versions merged with target, so manual deploy needs to build image (at least first time)"
        required: true
        default: "true"
      pr_number:
        description: "Pull request number (if redeploy without build) or own number for environment"
        required: true

env:
  CONTAINER_REGISTRY: ghcr.io
  CONTAINER_REGISTRY_USER: ${{ secrets.GHCR_CONTAINER_REGISTRY_USER }}
  CONTAINER_REGISTRY_PASSWORD: ${{ secrets.GHCR_TOKEN }}
  CONTAINER_REGISTRY_REPO: ghcr.io/city-of-helsinki/${{ github.event.repository.name }}
  REPO_NAME: ${{ github.event.repository.name }}
  KUBECONFIG_RAW: ${{ secrets.KUBECONFIG_RAW }}
  BUILD_ARTIFACT_FOLDER: 'build_artifacts'
  SERVICE_ARTIFACT_FOLDER: 'service_artifacts'
  APP_MIGRATE_COMMAND: /app/.prod/on_deploy.sh
  BASE_DOMAIN: ${{ secrets.BASE_DOMAIN_STAGING }}
  DATABASE_USER: user
  DATABASE_PASSWORD: testing-password
  K8S_REQUEST_CPU: 2m
  K8S_REQUEST_RAM: 200Mi
  K8S_LIMIT_CPU: 500m
  K8S_LIMIT_RAM: 250Mi

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        dir: [ 'djangoapp' ]
    runs-on: ubuntu-latest
    name: Build
    steps:
      - uses: actions/checkout@v2

      - name: Build ${{ matrix.service }}
        if: github.event_name == 'pull_request' || github.event.inputs.build_required == 'true'
        uses: andersinno/kolga-build-action@v2
        env:
          DOCKER_BUILD_SOURCE: ./${{ matrix.dir }}/Dockerfile
          DOCKER_BUILD_CONTEXT: ./${{ matrix.dir }}
          DOCKER_IMAGE_NAME: ${{ matrix.dir }}

  review:
    strategy:
      fail-fast: false
      matrix:
        service: [ 'djangoapp' ]
        include:
        - service: "djangoapp"
          dir: "djangoapp"
          database: true
    runs-on: ubuntu-latest
    needs: build
    name: Review
    steps:
      - uses: actions/checkout@v2

      - name: Parse branch from event
        id: branch
        run: |
          branch=$(echo ${{ github.event.ref }} | sed 's/refs\/heads\///')
          echo "::set-output name=manual_branch::$branch"

      - uses: andersinno/kolga-setup-action@v2
        with:
          head_ref: ${{ steps.branch.outputs.manual_branch }}
          pr_number: ${{ github.event.inputs.pr_number }}

      - name: Review-Services
        if: matrix.database
        uses: City-of-Helsinki/review-services-action@main
        with:
          database: ${{ env.K8S_NAMESPACE }}
          namespace: ${{ env.K8S_NAMESPACE }}
          action: create
          db_user: ${{ secrets.K8S_SECRET_DATABASE_ADMIN_USERNAME_REVIEW }}
          db_password: ${{ secrets.K8S_SECRET_DATABASE_ADMIN_PASSWORD_REVIEW }}
          db_host: ${{ secrets.K8S_SECRET_DATABASE_HOST_REVIEW }}
          db_port: ${{ secrets.K8S_SECRET_DATABASE_PORT_REVIEW }}
          kubeconfig: ${{ secrets.KUBECONFIG_RAW }}

      - name: Database variables
        if: matrix.database
        run: |
          echo "K8S_SECRET_DATABASE_HOST=${{ secrets.K8S_SECRET_DATABASE_HOST_REVIEW }}" >> $GITHUB_ENV
          echo "K8S_SECRET_DATABASE_PORT=${{ secrets.K8S_SECRET_DATABASE_PORT_REVIEW }}" >> $GITHUB_ENV
          echo "K8S_SECRET_DATABASE_DB=${{ env.K8S_NAMESPACE }}" >> $GITHUB_ENV
          echo "K8S_SECRET_DATABASE_USERNAME=${{ secrets.K8S_SECRET_DATABASE_USERNAME_REVIEW }}" >> $GITHUB_ENV
          echo "K8S_SECRET_DATABASE_PASSWORD=${{ secrets.K8S_SECRET_DATABASE_PASSWORD_REVIEW }}" >> $GITHUB_ENV

      - name: Deploy
        uses: andersinno/kolga-deploy-action@v2
        env:
          DOCKER_BUILD_SOURCE: ./${{ matrix.dir }}/Dockerfile
          DOCKER_BUILD_CONTEXT: ./${{ matrix.dir }}
          DOCKER_IMAGE_NAME: ${{ matrix.dir }}
          PROJECT_NAME: ${{ github.event.repository.name }}-${{ matrix.service }}
          ENVIRONMENT_URL: https://${{ env.K8S_NAMESPACE }}.${{ env.BASE_DOMAIN }}
          K8S_SECRET_VERSION: ${{ github.sha }}
          VAULT_JWT_PRIVATE_KEY: ${{ secrets.VAULT_ACCESS_PRIVATE_KEY_REVIEW }}
          VAULT_ADDR: ${{ secrets.VAULT_URL }}
          VAULT_KV_VERSION: "2"
          VAULT_JWT_AUTH_PATH: ${{ github.event.repository.name }}-${{ matrix.service }}-review
          VAULT_KV_SECRET_MOUNT_POINT: review
