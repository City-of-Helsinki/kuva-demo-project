name: Build & Review
on:
  pull_request:
  workflow_dispatch:
    inputs:
      build_required:
        description: "Build images (true/false)"
        required: true
        default: "false"
      pr_number:
        description: "Pull request number (if redeploy without build) or own number for environment"
        required: true

env:
  CONTAINER_REGISTRY: ghcr.io
  CONTAINER_REGISTRY_USER: ${{ secrets.GHCR_CONTAINER_REGISTRY_USER }}
  CONTAINER_REGISTRY_PASSWORD: ${{ secrets.GHCR_TOKEN }}
  CONTAINER_REGISTRY_REPO: ghcr.io/city-of-helsinki/${{ github.event.repository.name }}
  REPO_NAME: ${{ github.event.repository.name }}
  KUBECONFIG_RAW: ${{ secrets.KUBECONFIG_RAW }}
  BUILD_ARTIFACT_FOLDER: 'build_artifacts'
  SERVICE_ARTIFACT_FOLDER: 'service_artifacts'
  BASE_DOMAIN: ${{ secrets.BASE_DOMAIN_STAGING }}
  K8S_REQUEST_CPU: 2m
  K8S_REQUEST_RAM: 200Mi
  K8S_LIMIT_CPU: 500m
  K8S_LIMIT_RAM: 250Mi
  VAULT_JWT_PRIVATE_KEY: ${{ secrets.VAULT_ACCESS_PRIVATE_KEY }}
  VAULT_ADDR: ${{ secrets.VAULT_URL }}
  VAULT_KV_VERSION: "2"



jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        example: [ 'djangoapp' ]
    runs-on: ubuntu-latest
    name: Build
    steps:
      - uses: actions/checkout@v2

      - name: Build ${{ matrix.example }}
        if: github.event_name == 'pull_request' || github.event.inputs.build_required == 'true'
        uses: andersinno/kolga-build-action@v2
        env:
          DOCKER_BUILD_SOURCE: ./${{ matrix.example }}/Dockerfile
          DOCKER_BUILD_CONTEXT: ./${{ matrix.example }}
          DOCKER_IMAGE_NAME: ${{ matrix.example }}

  review:
    strategy:
      fail-fast: false
      matrix:
        example: [ 'djangoapp' ]
    runs-on: ubuntu-latest
    needs: build
    name: Review
    steps:
      - uses: actions/checkout@v2

      - uses: andersinno/kolga-setup-action@v2
        with:
          pr_number: ${{ github.event.inputs.pr_number }}

      - name: Deploy
        uses: hi-fi/kolga-deploy-action@test
        env:
          DOCKER_BUILD_SOURCE: ./${{ matrix.example }}/Dockerfile
          DOCKER_BUILD_CONTEXT: ./${{ matrix.example }}
          DOCKER_IMAGE_NAME: ${{ matrix.example }}
          ENVIRONMENT_URL: https://${{ env.K8S_NAMESPACE }}.${{ env.BASE_DOMAIN }}
          PROJECT_NAME: ${{ github.event.repository.name }}-${{ matrix.example }}
          VAULT_JWT_AUTH_PATH: ${{ github.event.repository.name }}-review
          K8S_SECRET_VERSION: ${{ github.sha }}
          VAULT_KV_SECRET_MOUNT_POINT: review
