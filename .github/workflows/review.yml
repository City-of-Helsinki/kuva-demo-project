name: Build & Review
on: [pull_request]

env:
  CONTAINER_REGISTRY: ghcr.io
  CONTAINER_REGISTRY_USER: ${{ secrets.GHCR_CONTAINER_REGISTRY_USER }}
  CONTAINER_REGISTRY_PASSWORD: ${{ secrets.GHCR_TOKEN }}
  CONTAINER_REGISTRY_REPO: ghcr.io/city-of-helsinki/${{ github.event.repository.name }}
  REPO_NAME: ${{ github.event.repository.name }}
  KUBECONFIG_RAW: ${{ secrets.KUBECONFIG_RAW }}
  BUILD_ARTIFACT_FOLDER: 'build_artifacts'
  SERVICE_ARTIFACT_FOLDER: 'service_artifacts'
  BASE_DOMAIN: ${{ secrets.BASE_DOMAIN_STAGING }}
  DATABASE_USER: user
  DATABASE_PASSWORD: testing-password
  APP_MIGRATE_COMMAND: /app/.prod/on_deploy.sh
  K8S_REQUEST_CPU: 2m
  K8S_REQUEST_RAM: 200Mi
  K8S_LIMIT_CPU: 500m
  K8S_LIMIT_RAM: 250Mi

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        example: [ 'djangoapp' ]
    runs-on: ubuntu-latest
    name: Build ${{ matrix.example }} if needed
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: marceloprado/has-changed-path@0ffbcfc95a9a2976ba454d8e8687bb49f989f721
        id: changes
        with:
          paths: ${{ matrix.example }} .github/workflows/review.yml

      - name: Build
        if: steps.changes.outputs.changed == 'true'
        uses: andersinno/kolga-build-action@v2

  review:
     strategy:
      fail-fast: false
      matrix:
        example: [ 'djangoapp' ]
    runs-on: ubuntu-latest
    needs: build
    name: Review
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: marceloprado/has-changed-path@0ffbcfc95a9a2976ba454d8e8687bb49f989f721
        id: changes
        with:
          paths: ${{ matrix.example }} .github/workflows/review.yml

      - uses: andersinno/kolga-setup-action@v2
        if: steps.changes.outputs.changed == 'true'

      - name: Deploy
        if: steps.changes.outputs.changed == 'true'
        uses: andersinno/kolga-deploy-action@v2
        env:
          ENVIRONMENT_URL: https://${{ env.K8S_NAMESPACE }}.${{ env.BASE_DOMAIN }}
          K8S_SECRET_ALLOWED_HOSTS: "*"
          K8S_SECRET_DEBUG: 1
          K8S_SECRET_ADMIN_USER_PASSWORD: "admin"
          K8S_SECRET_GDPR_API_ENABLED: 1
          K8S_SECRET_GDPR_API_QUERY_SCOPE: "jassariapi.gdprquery"
          K8S_SECRET_GDPR_API_DELETE_SCOPE: "jassariapi.gdprdelete"
          K8S_SECRET_SENTRY_DSN: ${{ secrets.GH_SENTRY_DSN }}
          K8S_SECRET_SENTRY_ENVIRONMENT: "test"
          K8S_SECRET_VERSION: ${{ github.sha }}
          K8S_SECRET_ENABLE_GRAPHIQL: 1
          K8S_SECRET_TOKEN_AUTH_ACCEPTED_AUDIENCE: "https://api.hel.fi/auth/jassariapi"
          K8S_SECRET_TOKEN_AUTH_ACCEPTED_SCOPE_PREFIX: "jassariapi"
          K8S_SECRET_TOKEN_AUTH_AUTHSERVER_URL: "https://tunnistamo.${{ env.BASE_DOMAIN }}/openid"
          K8S_SECRET_TOKEN_AUTH_REQUIRE_SCOPE: 1
          K8S_SECRET_OIDC_CLIENT_ID: ${{ secrets.GH_QA_OIDC_CLIENT_ID }}
          K8S_SECRET_OIDC_CLIENT_SECRET: ${{ secrets.GH_QA_OIDC_CLIENT_SECRET }}
          K8S_SECRET_HELSINKI_PROFILE_AUTH_SCOPE: "https://api.hel.fi/auth/helsinkiprofile"
          K8S_SECRET_HELSINKI_PROFILE_AUTH_CALLBACK_URL: "https://jassari.${{ env.BASE_DOMAIN }}/callback"
          K8S_SECRET_HELSINKI_PROFILE_API_URL: "https://profiili-api.${{ env.BASE_DOMAIN }}/graphql/"
          K8S_SECRET_MAIL_MAILGUN_KEY: ${{ secrets.GH_MAILGUN_API_KEY }}
          K8S_SECRET_MAIL_MAILGUN_DOMAIN: "mail.hel.ninja"
          K8S_SECRET_MAIL_MAILGUN_API: "https://api.eu.mailgun.net/v3"
          K8S_SECRET_MAILER_EMAIL_BACKEND: "anymail.backends.mailgun.EmailBackend"
          K8S_SECRET_DEFAULT_FROM_EMAIL: "no-reply@hel.ninja"
          K8S_SECRET_AUDIT_LOGGING_ENABLED: 1
          K8S_SECRET_AUDIT_LOG_USERNAME: ${{ secrets.AUDIT_LOG_USERNAME }}
